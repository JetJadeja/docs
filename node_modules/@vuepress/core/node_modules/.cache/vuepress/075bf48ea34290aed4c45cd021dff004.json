{"remainingRequest":"/Users/jaibhavnani/Desktop/Git/vuepress-theme-blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jaibhavnani/Desktop/Git/vuepress-theme-blog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/jaibhavnani/Desktop/Git/vuepress-theme-blog/docs/config/README.md?vue&type=template&id=c34cab30&","dependencies":[{"path":"/Users/jaibhavnani/Desktop/Git/vuepress-theme-blog/docs/config/README.md","mtime":1619155064931},{"path":"/Users/jaibhavnani/Desktop/Git/vuepress-theme-blog/node_modules/cache-loader/dist/cjs.js","mtime":1619077300192},{"path":"/Users/jaibhavnani/Desktop/Git/vuepress-theme-blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1619077362344},{"path":"/Users/jaibhavnani/Desktop/Git/vuepress-theme-blog/node_modules/cache-loader/dist/cjs.js","mtime":1619077300192},{"path":"/Users/jaibhavnani/Desktop/Git/vuepress-theme-blog/node_modules/vue-loader/lib/index.js","mtime":1619077362344},{"path":"/Users/jaibhavnani/Desktop/Git/vuepress-theme-blog/node_modules/@vuepress/markdown-loader/index.js","mtime":1619077304147}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}